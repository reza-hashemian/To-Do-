# Generated by Django 4.0.7 on 2024-08-02 18:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('baseuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='board', related_query_name='board_obj', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('baseuser', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('color', models.CharField(choices=[('blue', 'blue'), ('indigo', 'indigo'), ('purple', 'purple'), ('pink', 'pink'), ('red', 'red'), ('orange', 'orange'), ('yellow', 'yellow'), ('green', 'green'), ('teal', 'teal'), ('cyan', 'cyan')], default='green', max_length=30)),
            ],
            options={
                'unique_together': {('name', 'color')},
            },
        ),
        migrations.CreateModel(
            name='MemberJoined',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('baseuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ToDoList',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('color', models.CharField(choices=[('blue', 'blue'), ('indigo', 'indigo'), ('purple', 'purple'), ('pink', 'pink'), ('red', 'red'), ('orange', 'orange'), ('yellow', 'yellow'), ('green', 'green'), ('teal', 'teal'), ('cyan', 'cyan')], default='cyan', max_length=30)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='todolists', related_query_name='todolist', to='ToDo.board')),
                ('members', models.ManyToManyField(related_name='members', related_query_name='member', through='ToDo.MemberJoined', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-priority', 'created_at'],
                'unique_together': {('name', 'board')},
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('should_done_at', models.DateTimeField(blank=True, null=True)),
                ('done_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('NOT_STARTED', 'Not Started'), ('IN_PROGRESS', 'In Progress'), ('PENDING', 'Pending'), ('CANCELLED', 'Cancelled'), ('DEFERRED', 'Deferred'), ('NEEDS_REVIEW', 'Needs Review'), ('COMPLETED', 'Completed')], default='NOT_STARTED', max_length=20)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('label', models.ManyToManyField(blank=True, related_name='labels', related_query_name='label', to='ToDo.label')),
                ('todolist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', related_query_name='task', to='ToDo.todolist')),
            ],
            options={
                'ordering': ['-priority', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='memberjoined',
            name='todolist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ToDo.todolist'),
        ),
        migrations.CreateModel(
            name='Emoji',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji', models.CharField(max_length=10)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emojis', to='ToDo.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emoji_of_comment_of_task', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='ToDo.task'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_of_task', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ChecklistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('is_completed', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklists_owner', related_query_name='checklist_owner', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist_items', to='ToDo.task')),
                ('user_that_should_done', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklists', related_query_name='checklist', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attachments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='tasks/attachments/')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='ToDo.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments_of_task', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
